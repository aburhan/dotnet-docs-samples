name: NEW

on:
  workflow_dispatch:

env:
  PROJECT_ID: 'github-action-393418'
  PROJECT_NUMBER: '168241442549'
  
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    # actions/checkout MUST come before auth
    - uses: 'actions/checkout@v3'
    - name: List all files
      run: |
        echo "List all files:"
        git ls-files
    
    - name: Check manifests using kube-score
      uses: yokawasa/action-setup-kube-tools@v0.9.2
    - run: |
        kube-score score manifests/job.yaml

    - name: Get K8 Kind
      uses: 'mikefarah/yq@master'
      with:
        #run: ./manifests/test-jq.sh
        cmd: yq '.kind' "manifests/pod.yaml"

    #
    # Authenticate to Google Cloud using workload identity federation
    #
    - id: 'auth'
      name: 'Obtain access token by using workload identity federation'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-actions/providers/github-actions-oidc
        service_account: github-actions-workflow@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
        
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'
   
        
    - name: 'Get workload recommendation'
      id: bigquery
      run: |
       bq query --nouse_legacy_sql --format=json 'SELECT CAST(cpu_requested_recommendation AS INT64) AS cpu_requested_recommendation FROM `github-action-393418.data.container_recommendations` LIMIT 1'
       export CPU=$(bq query --nouse_legacy_sql --format=json 'SELECT CAST(cpu_requested_recommendation AS INT64) AS cpu_requested_recommendation FROM `github-action-393418.data.container_recommendations` LIMIT 1'| jq -r '.[0].cpu_requested_recommendation')
       echo $CPU
    
  # This is a basic workflow to help you get started with Actions

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
  update_file:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Update README
      run: |
        git checkout -b new_branch_4
        git branch --all
        git branch --show-current
        echo " Ameenah is updating the content again and again and again " >> README.md

    - name: Commit changes
      run: |
        git config --global user.email "ameenah.burhan@gmail.com"
        git config --global user.name "aburhan"
        git add README.md
        git commit -m "Update README.md"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        git push --set-upstream origin new_branch_4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Pull Request
      run: |
        gh pr create --title "Pull request title" --body "Pull request body" --base main --head new_branch_4
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    #- name: Get K8 Kind
     # uses: 'mikefarah/yq@master'
      #with: 
       #cmd: |
         #yq '.spec.containers[0].resources.requests.cpu' "manifests/pod.yaml"
         #yq -i e '.spec.containers[0].resources.requests.cpu = "3"' manifests/pod.yaml
         #yq '.spec.containers[0].resources.requests.cpu' "manifests/pod.yaml"
    
    #- uses: actions/checkout@v3
    #- run: |
     #     cat manifests/pod.yaml
      #    git config user.name github-actions
       #   git config user.email github-actions@github.com
        #  git add .
         # git commit -m "generated"
          #git  --set-upstream origin rightsize


         
     # yq eval -i '.spec.containers[0].resources.requests.cpu = "${{ steps.bigquery.outputs.CPU }}"' manifests/pod.yaml
    
    #cmd: yq '.kind' "manifests/pod.yaml"    
  
    #- name: 'Create Pull Request'
     # uses: 'peter-evans/create-pull-request@v3'
     # with:
      #  title: 'Updated YAML files with new CPU and memory values'
      #  body: 'This PR updates the CPU and memory values in all YAML files'
      #  branch: 'updated-yaml-files'
    #- name: 'Use gcloud CLI'
     # run: bq query --use_legacy_sql=false 'SELECT * FROM `github-action-393418.test.test`'

      
    #- name: Set up Python
    #  uses: actions/setup-python@v4
    #  with:
    #    python-version: 3.9

    #- name: Install dependencies
    #  run: pip install google-cloud-bigquery

    #- name: Run script
    #  run: python main-chat.py
    
